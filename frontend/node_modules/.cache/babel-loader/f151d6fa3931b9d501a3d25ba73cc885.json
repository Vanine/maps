{"ast":null,"code":"import _classCallCheck from\"/home/vanine/Desktop/maps/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vanine/Desktop/maps/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/home/vanine/Desktop/maps/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/home/vanine/Desktop/maps/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/home/vanine/Desktop/maps/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{GoogleApiWrapper,Marker}from'google-maps-react';import CustomMarker from'./marker';import{connect}from\"react-redux\";import{addPoint as _addPoint}from'../actions/addpoint';import{setPoints as _setPoints}from'../actions/setpoints';import{updatePoint as _updatePoint}from'../actions/updatepoint';import GoogleMap from'google-map-react';import'../App.css';var MapContainer=/*#__PURE__*/function(_React$Component){_inherits(MapContainer,_React$Component);function MapContainer(props){var _this;_classCallCheck(this,MapContainer);_this=_possibleConstructorReturn(this,_getPrototypeOf(MapContainer).call(this,props));_this.handleFetch=function(){fetch(\"http://localhost:3001/points\",{method:'GET',headers:{'Content-Type':'application/x-www-form-urlencoded'}}).then(function(response){return response.json();}).then(function(response){_this.props.setPoints({points:response.points});console.log(response);}).catch(function(error){return console.log('error:',error);});};_this.displayMarkers=function(){return _this.props.points.map(function(point,index){console.log(point,index);return React.createElement(CustomMarker,{lat:point.latitude,lng:point.longitude,frequency:point.frequency,text:\"My Marker\"});});};_this.state=[];_this.handleFetch();return _this;}_createClass(MapContainer,[{key:\"componentDidUpdate\",value:function componentDidUpdate(){console.log(\"componentWillUpdate\");console.log(\"this.props.points: \",this.props.points);this.displayMarkers();}},{key:\"render\",value:function render(){var mapStyle={paddingTop:'20px',width:'100%',height:'100vh',paddingLeft:'20px',paddingRight:'20px'};return React.createElement(\"div\",{style:mapStyle},React.createElement(GoogleMap,{bootstrapURLKeys:{key:'AIzaSyCR1rxt8xnpURsVA3bDm8eukPy4EmW9icQ',v:'3.32'},zoom:8,center:{lat:4,lng:5},margin:[100,100,100,200],passive:true,yesIWantToUseGoogleMapApiInternals:true,defaultOptions:{disableDefaultUI:true,keyboardShortcuts:false,scaleControl:true}},this.displayMarkers()));}}]);return MapContainer;}(React.Component);export default connect(function(state){return{points:state.points};},function(dispatch){return{addPoint:function addPoint(data){dispatch(_addPoint(data));},setPoints:function setPoints(data){dispatch(_setPoints(data));},updatePoint:function updatePoint(data){dispatch(_updatePoint(data));}};})(MapContainer);","map":{"version":3,"sources":["/home/vanine/Desktop/maps/frontend/src/components/mapContainer.js"],"names":["React","GoogleApiWrapper","Marker","CustomMarker","connect","addPoint","setPoints","updatePoint","GoogleMap","MapContainer","props","handleFetch","fetch","method","headers","then","response","json","points","console","log","catch","error","displayMarkers","map","point","index","latitude","longitude","frequency","state","mapStyle","paddingTop","width","height","paddingLeft","paddingRight","key","v","lat","lng","disableDefaultUI","keyboardShortcuts","scaleControl","Component","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { GoogleApiWrapper, Marker } from 'google-maps-react';\nimport CustomMarker from './marker';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport { updatePoint } from '../actions/updatepoint';\nimport GoogleMap from 'google-map-react';\n\nimport '../App.css';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [];\n    this.handleFetch();\n  }\n  \n  handleFetch = () => {\n    fetch(\"http://localhost:3001/points\",  {\n      method: 'GET',\n      headers: {\n         'Content-Type': 'application/x-www-form-urlencoded',\n      },\n  }).then(response => response.json())\n  .then(response => {\n    this.props.setPoints({points: response.points});\n    console.log(response);\n  })\n  .catch(error => console.log('error:', error)); \n}\ncomponentDidUpdate() {\n  console.log(\"componentWillUpdate\");\n  console.log(\"this.props.points: \", this.props.points);\n  this.displayMarkers();\n}\n\ndisplayMarkers = () => {\n    return this.props.points.map((point, index) => {\n    console.log(point, index)\n    return  <CustomMarker\n    lat={point.latitude}\n    lng={point.longitude}\n    frequency={point.frequency}\n    text=\"My Marker\"\n  />})}\n  render() {\n    const mapStyle = {\n      paddingTop: '20px',\n      width: '100%',\n      height: '100vh',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n    };\n    \n    return (\n      <div style={mapStyle}>\n      <GoogleMap\n      bootstrapURLKeys={{key: 'AIzaSyCR1rxt8xnpURsVA3bDm8eukPy4EmW9icQ', v: '3.32',}}\n      zoom={8}\n      center={{ lat: 4, lng: 5}}\n      margin={[100, 100, 100, 200]}\n      passive={true}\n      \n      yesIWantToUseGoogleMapApiInternals\n      defaultOptions={{\n        disableDefaultUI: true,\n        keyboardShortcuts: false, \n        scaleControl: true, \n      }}\n      >\n      {this.displayMarkers()}\n      </GoogleMap>\n      </div>\n     \n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    points: state.points,\n    }),\n  dispatch => ({\n    addPoint: (data => {\n      dispatch(addPoint(data))\n    }),\n    setPoints: ((data) => {\n      dispatch(setPoints(data))\n    }),\n    updatePoint: ((data) => {\n      dispatch(updatePoint(data))\n    }),\n}))(MapContainer)\n"]},"metadata":{},"sourceType":"module"}