{"ast":null,"code":"var _jsxFileName = \"/home/vanine/Desktop/maps/frontend/src/components/addProblem.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Select, InputNumber } from 'antd';\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\n\nclass AddProblemForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.handleSubmit = e => {//     e.preventDefault();\n      //   this.props.form.validateFieldsAndScroll((err, values) => {\n      //     if (!err) {\n      //       const newUser = {\n      //         name: values.nickname,\n      //         email: values.email,\n      //         number: values.phone,\n      //         password: values.password\n      //     };\n      //     console.log(newUser);\n      //     if (this.props.handleCancel) {\n      //       this.props.handleCancel();\n      //     }\n      //     fetch(\"/api/signup\", {\n      //         method: 'POST',\n      //         body: JSON.stringify(newUser),\n      //         headers: {\n      //             'Content-Type': 'application/x-www-form-urlencoded',\n      //             },\n      //     }).then(response => response.json())\n      //     .then(response => {console.log('response: ', response);\n      //    if(!this.props.handleRegister) { this.props.history.push({\n      //       pathname: 'message',\n      //       state: {message: response.message}\n      //     })}\n      //   else {\n      //     this.props.handleRegister(newUser)\n      //   }})\n      //     .catch(error => console.log('error:', error));\n      //     }\n      //   });\n      //   this.props.form.resetFields();\n    };\n\n    this.handleChange = value => {\n      console.log(`selected ${value}`);\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formStyle = {\n      marginLeft: '20%',\n      marginTop: '3%',\n      width: '50%'\n    };\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      style: formStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Category\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, getFieldDecorator('category', {\n      rules: [{\n        required: true\n      }]\n    })(React.createElement(Select, {\n      defaultValue: \"lucy\",\n      style: {\n        width: 120\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"jack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Jack\"), React.createElement(Option, {\n      value: \"lucy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Lucy\"), React.createElement(Option, {\n      value: \"Yiminghe\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"yiminghe\")))), React.createElement(Form.Item, {\n      label: \"Latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, getFieldDecorator('latitude', {\n      rules: [{\n        type: 'number',\n        message: 'The input is not valid'\n      }, {\n        required: true,\n        message: 'Please input the latitude!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, getFieldDecorator('longitude', {\n      rules: [{\n        type: 'number',\n        message: 'The input is not valid'\n      }, {\n        required: true,\n        message: 'Please input the longitude!'\n      }]\n    })(React.createElement(InputNumber, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, getFieldDecorator('description', {\n      rules: [{\n        type: 'string'\n      }, {\n        required: false,\n        message: 'Please input the longitude!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst WrappedAddProblemForm = Form.create({\n  name: 'register'\n})(AddProblemForm);\nexport default WrappedAddProblemForm;","map":{"version":3,"sources":["/home/vanine/Desktop/maps/frontend/src/components/addProblem.js"],"names":["React","Form","Input","Button","Select","InputNumber","Option","TextArea","AddProblemForm","Component","state","confirmDirty","autoCompleteResult","handleSubmit","e","handleChange","value","console","log","handleConfirmBlur","target","setState","render","getFieldDecorator","props","form","formStyle","marginLeft","marginTop","width","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","type","message","WrappedAddProblemForm","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Select, InputNumber } from 'antd';\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass AddProblemForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  \n    handleSubmit = e => {\n    //     e.preventDefault();\n    //   this.props.form.validateFieldsAndScroll((err, values) => {\n    //     if (!err) {\n    //       const newUser = {\n    //         name: values.nickname,\n    //         email: values.email,\n    //         number: values.phone,\n    //         password: values.password\n    //     };\n    //     console.log(newUser);\n    //     if (this.props.handleCancel) {\n    //       this.props.handleCancel();\n    //     }\n    //     fetch(\"/api/signup\", {\n    //         method: 'POST',\n    //         body: JSON.stringify(newUser),\n    //         headers: {\n    //             'Content-Type': 'application/x-www-form-urlencoded',\n    //             },\n    //     }).then(response => response.json())\n    //     .then(response => {console.log('response: ', response);\n    //    if(!this.props.handleRegister) { this.props.history.push({\n    //       pathname: 'message',\n    //       state: {message: response.message}\n    //     })}\n    //   else {\n    //     this.props.handleRegister(newUser)\n    //   }})\n    //     .catch(error => console.log('error:', error));\n    //     }\n    //   });\n    //   this.props.form.resetFields();\n    };\n    handleChange = (value) => {\n        console.log(`selected ${value}`);\n      };\n\n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    render() {\n      const { getFieldDecorator } = this.props.form;\n      const formStyle = {\n          marginLeft: '20%',\n          marginTop: '3%',\n          width: '50%'\n      }\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n       return (\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} className='form' style={formStyle}>\n             <Form.Item label={<span>Category</span>}>\n             {getFieldDecorator('category', {\n              rules: [\n                {\n                  required: true,\n                },\n              ],\n            })(<Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={this.handleChange}>\n                <Option value=\"jack\">Jack</Option>\n                <Option value=\"lucy\">Lucy</Option>\n                <Option value=\"Yiminghe\">yiminghe</Option>\n            </Select>)}\n          </Form.Item>\n          <Form.Item label=\"Latitude\">\n            {getFieldDecorator('latitude', {\n              rules: [\n                {\n                  type: 'number',\n                  message: 'The input is not valid',\n                },\n                {\n                  required: true,\n                  message: 'Please input the latitude!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n          <Form.Item label=\"Longitude\">\n            {getFieldDecorator('longitude', {\n              rules: [\n                {\n                  type: 'number',\n                  message: 'The input is not valid',\n                },\n                {\n                  required: true,\n                  message: 'Please input the longitude!',\n                },\n              ],\n            })(<InputNumber style={{width: '100%'}}/>)}\n          </Form.Item>   \n          <Form.Item label=\"Description\">\n            {getFieldDecorator('description', {\n              rules: [\n                {\n                  type: 'string',\n                },\n                {\n                  required: false,\n                  message: 'Please input the longitude!',\n                },\n              ],\n            })(<TextArea rows={4} />)}\n          </Form.Item>         \n         <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n            <br />\n          </Form.Item>\n        </Form>\n      );\n    }\n  }\n  \n  const WrappedAddProblemForm = Form.create({ name: 'register' })(AddProblemForm);\n  \nexport default WrappedAddProblemForm;"]},"metadata":{},"sourceType":"module"}