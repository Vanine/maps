{"ast":null,"code":"var _jsxFileName = \"/home/vanine/Desktop/maps/frontend/src/components/addProblem.js\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Form, Input, Button, Select, InputNumber, Upload, Icon, message } from 'antd';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport { updatePoint } from '../actions/updatepoint';\nimport FormItem from 'antd/lib/form/FormItem';\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\n\nclass AddProblemForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      selectedFile: null\n    };\n\n    this.onChangeHandler = event => {\n      console.log(\"hdgdfgfgdfgsfd\");\n      console.log(event.target.files[0]);\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const data = new FormData();\n          data.append('file', this.state.selectedFile);\n          console.log(this.state.selectedFile);\n          console.log('data: ', data);\n          const newProblem = {\n            category: values.category,\n            longitude: values.longitude,\n            latitude: values.latitude,\n            description: values.description,\n            image: data\n          };\n          const newPoint = {\n            latitude: values.latitude,\n            longitude: values.longitude\n          };\n          console.log(newProblem);\n          axios({\n            method: 'post',\n            url: 'http://localhost:3001/p',\n            data: data\n          }).then(response => {\n            console.log(response);\n          }).catch(error => console.log(error));\n          fetch(\"http://localhost:3001/add_problem\", {\n            method: 'POST',\n            body: newProblem,\n            headers: {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            }\n          }).then(response => response.json()).then(response => {\n            console.log('response: ', response);\n          }).then(() => {\n            fetch(\"http://localhost:3001/add_point\", {\n              method: 'POST',\n              body: JSON.stringify(newPoint),\n              headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n              }\n            }).then(res => {\n              console.log(\"resp: \", res);\n\n              if (res.status === 200) {\n                this.props.addPoint(newPoint);\n              } else if (res.status === 201) {\n                this.props.updatePoint(newPoint);\n              }\n\n              res.json();\n            }).then(res => {\n              console.log('response: ', res);\n            }).then(() => {\n              console.log(\"jdgfhdghfd\");\n            });\n          }).catch(error => console.log('error:', error));\n        }\n\n        this.props.form.resetFields();\n      });\n    };\n\n    this.handleChange = value => {\n      console.log(`selected ${value}`);\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.fileInput = React.createRef();\n  }\n\n  render() {\n    const props = {\n      name: 'file',\n      action: 'http://localhost:3001/add_image',\n      headers: {\n        authorization: 'authorization-text'\n      },\n\n      onChange(info) {\n        if (info.file.status !== 'uploading') {\n          console.log(info.file, info.fileList);\n        }\n\n        if (info.file.status === 'done') {\n          message.success(`${info.file.name} file uploaded successfully`);\n        } else if (info.file.status === 'error') {\n          message.error(`${info.file.name} file upload failed.`);\n        }\n      }\n\n    };\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const formStyle = {\n      marginLeft: '20%',\n      marginTop: '3%',\n      width: '50%'\n    };\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 8\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 16\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 16,\n          offset: 8\n        }\n      }\n    };\n    return React.createElement(Form, Object.assign({}, formItemLayout, {\n      onSubmit: this.handleSubmit,\n      className: \"form\",\n      style: formStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Category\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, getFieldDecorator('category', {\n      initialValue: 'Garbage disposal is not done on time'\n    })(React.createElement(Select, {\n      style: {\n        width: '100%'\n      },\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Garbage disposal is not done on time\"), React.createElement(Option, {\n      value: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Trash has no lid\"), React.createElement(Option, {\n      value: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Trash is placed in the wrong place\")))), React.createElement(Form.Item, {\n      label: \"Latitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, getFieldDecorator('latitude', {\n      rules: [{\n        validator(rule, value, callback) {\n          if (!value) {\n            callback('Latitude is required');\n            return;\n          }\n\n          if (value > 85 || value < -85) {\n            callback('Invalid value!');\n            return;\n          }\n\n          if (typeof value !== 'number') {\n            callback('Latitude is not a number');\n            return;\n          } else {\n            callback();\n          }\n        }\n\n      }]\n    })(React.createElement(InputNumber, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Longitude\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, getFieldDecorator('longitude', {\n      rules: [{\n        validator(rule, value, callback) {\n          if (!value) {\n            callback('Longitude is required');\n            return;\n          }\n\n          if (value > 180 || value < -180) {\n            callback('Invalid value!');\n            return;\n          }\n\n          if (typeof value !== 'number') {\n            callback('Longitude is not a number');\n            return;\n          } else {\n            callback();\n          }\n        }\n\n      }]\n    })(React.createElement(InputNumber, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, getFieldDecorator('description', {\n      rules: [{\n        type: 'string'\n      }, {\n        min: 20,\n        message: 'Must contain at least 20 letters!'\n      }, {\n        max: 300,\n        message: 'Must contain at most 300 letters!'\n      }]\n    })(React.createElement(TextArea, {\n      rows: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }))), React.createElement(FormItem, {\n      label: \"Image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, getFieldDecorator('file', {})(React.createElement(Input, {\n      type: \"file\",\n      name: \"file\",\n      onChange: this.onChangeHandler,\n      ref: this.fileInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))), React.createElement(Form.Item, Object.assign({}, tailFormItemLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Add\")));\n  }\n\n}\n\nconst WrappedAddProblemForm = Form.create({\n  name: 'register'\n})(AddProblemForm);\nexport default connect(state => ({\n  points: state.points\n}), dispatch => ({\n  addPoint: data => {\n    dispatch(addPoint(data));\n  },\n  setPoints: data => {\n    dispatch(setPoints(data));\n  },\n  updatePoint: data => {\n    dispatch(updatePoint(data));\n  }\n}))(WrappedAddProblemForm);","map":{"version":3,"sources":["/home/vanine/Desktop/maps/frontend/src/components/addProblem.js"],"names":["React","axios","Form","Input","Button","Select","InputNumber","Upload","Icon","message","connect","addPoint","setPoints","updatePoint","FormItem","Option","TextArea","AddProblemForm","Component","constructor","props","state","confirmDirty","autoCompleteResult","selectedFile","onChangeHandler","event","console","log","target","files","setState","loaded","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","data","FormData","append","newProblem","category","longitude","latitude","description","image","newPoint","method","url","then","response","catch","error","fetch","body","headers","json","JSON","stringify","res","status","resetFields","handleChange","value","handleConfirmBlur","fileInput","createRef","render","name","action","authorization","onChange","info","file","fileList","success","getFieldDecorator","formStyle","marginLeft","marginTop","width","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","initialValue","rules","validator","rule","callback","type","min","max","WrappedAddProblemForm","create","points","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'antd/dist/antd.css';\nimport axios from 'axios';\nimport { Form, Input, Button, Select, InputNumber, Upload, Icon, message } from 'antd';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport { updatePoint } from '../actions/updatepoint';\nimport FormItem from 'antd/lib/form/FormItem';\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass AddProblemForm extends React.Component {\n    state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n      selectedFile: null,\n    };\n    constructor(props) {\n      super(props);\n      this.fileInput = React.createRef();\n    }\n    onChangeHandler = event => {\n      console.log(\"hdgdfgfgdfgsfd\");\n      console.log(event.target.files[0]);\n      this.setState({\n        selectedFile: event.target.files[0],\n        loaded: 0,\n      })\n    }\n    handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          const data = new FormData() \n          data.append('file', this.state.selectedFile);\n          console.log(this.state.selectedFile);\n          console.log('data: ', data);\n          const newProblem = {\n            category: values.category,\n            longitude: values.longitude,\n            latitude: values.latitude,\n            description: values.description,\n            image: data\n        };\n          const newPoint = {\n            latitude: values.latitude,\n            longitude: values.longitude\n          }\n        console.log(newProblem);\n        axios({\n          method: 'post',\n          url: 'http://localhost:3001/p',\n          data: data,\n          \n        }).then(response => {\n          console.log(response);\n        }).catch(error => console.log(error));\n\n        fetch(\"http://localhost:3001/add_problem\", {\n            method: 'POST',\n            body: newProblem,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                },\n        }).then(response => response.json())\n        .then(response => {console.log('response: ', response)})\n        .then(() => {\n        fetch(\"http://localhost:3001/add_point\", {\n          method: 'POST',\n          body: JSON.stringify(newPoint),\n          headers: {\n              'Content-Type': 'application/x-www-form-urlencoded',\n              },\n        }).then(res => {\n          console.log(\"resp: \", res);\n          if(res.status === 200) {\n            this.props.addPoint(newPoint);\n          }\n          else if(res.status === 201) {\n            this.props.updatePoint(newPoint);\n          }\n          res.json()})\n        .then(res => {console.log('response: ', res)})\n        .then(() => {\n          console.log(\"jdgfhdghfd\");\n        })\n      })\n        .catch(error => console.log('error:', error));\n      }\n      this.props.form.resetFields();\n      })};\n\n    handleChange = (value) => {\n        console.log(`selected ${value}`);\n    };\n\n    handleConfirmBlur = e => {\n      const { value } = e.target;\n      this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n    \n    render() {\n      \n      const props = {\n        name: 'file',\n        action: 'http://localhost:3001/add_image',\n        headers: {\n          authorization: 'authorization-text',\n        },\n        onChange(info) {\n          if (info.file.status !== 'uploading') {\n            console.log(info.file, info.fileList);\n          }\n          if (info.file.status === 'done') {\n            message.success(`${info.file.name} file uploaded successfully`);\n          } else if (info.file.status === 'error') {\n            message.error(`${info.file.name} file upload failed.`);\n          }\n        },\n      };\n      const { getFieldDecorator } = this.props.form;\n      const formStyle = {\n          marginLeft: '20%',\n          marginTop: '3%',\n          width: '50%'\n      }\n  \n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 8 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 16 },\n        },\n      };\n      const tailFormItemLayout = {\n        wrapperCol: {\n          xs: {\n            span: 24,\n            offset: 0,\n          },\n          sm: {\n            span: 16,\n            offset: 8,\n          },\n        },\n      };\n       return (\n        <Form {...formItemLayout} onSubmit={this.handleSubmit} className='form' style={formStyle}>\n             <Form.Item label={<span>Category</span>}>\n             {getFieldDecorator('category', {\n                initialValue: 'Garbage disposal is not done on time'\n            })(<Select style={{ width: '100%' }} onChange={this.handleChange}>\n                <Option value=\"0\">Garbage disposal is not done on time</Option>\n                <Option value=\"1\">Trash has no lid</Option>\n                <Option value=\"2\">Trash is placed in the wrong place</Option>\n            </Select>)}\n          </Form.Item>\n          <Form.Item label=\"Latitude\">\n            {getFieldDecorator('latitude', {\n              rules: [\n                {\n                  validator(rule, value, callback) {\n                    if(!value) {\n                      callback('Latitude is required');\n                      return;\n                    }\n                    if(value > 85 || value < -85) {\n                      callback('Invalid value!');\n                      return;\n                    }\n                    if(typeof(value) !== 'number') {\n                      callback('Latitude is not a number');\n                      return;\n                    }\n                    else {\n                      callback();\n                    }\n                  } \n                },\n              ],\n            })(<InputNumber style={{width: '100%'}} />)}\n          </Form.Item>\n          <Form.Item label=\"Longitude\">\n            {getFieldDecorator('longitude', {\n              rules: [\n                {\n                  validator(rule, value, callback) {\n                    if(!value) {\n                      callback('Longitude is required');\n                      return;\n                    }\n                    if(value > 180 || value < -180) {\n                      callback('Invalid value!');\n                      return;\n                    }\n                    if(typeof(value) !== 'number') {\n                      callback('Longitude is not a number');\n                      return;\n                    }\n                    else {\n                      callback();\n                    }\n                  } \n                },\n              ],\n            })(<InputNumber style={{width: '100%'}}/>)}\n          </Form.Item>   \n          <Form.Item label=\"Description\">\n            {getFieldDecorator('description', {\n              rules: [\n                {\n                  type: 'string',\n                },\n                {\n                  min: 20,\n                  message: 'Must contain at least 20 letters!',\n                },\n                {\n                  max: 300,\n                  message: 'Must contain at most 300 letters!',\n                }\n              ],\n            })(<TextArea rows={3} />)}\n          </Form.Item>  \n          <FormItem label='Image'>\n          {getFieldDecorator('file', {\n            })(<Input type='file' name = 'file' onChange={this.onChangeHandler} ref={this.fileInput}/>)}          \n            </FormItem>   \n         <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Add\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n    }\n  }\n  \nconst WrappedAddProblemForm = Form.create({ name: 'register' })(AddProblemForm);\nexport default connect(\n  state => ({\n    points: state.points,\n    }),\n  dispatch => ({\n    addPoint: (data => {\n      dispatch(addPoint(data))\n    }),\n    setPoints: ((data) => {\n      dispatch(setPoints(data))\n    }),\n    updatePoint: ((data) => {\n      dispatch(updatePoint(data))\n    }),\n}))(WrappedAddProblemForm);"]},"metadata":{},"sourceType":"module"}