{"ast":null,"code":"var _jsxFileName = \"/home/vanine/Desktop/maps/frontend/src/components/mapContainer.js\";\nimport React from 'react';\nimport CustomMarker from './marker';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport { updatePoint } from '../actions/updatepoint';\nimport GoogleMap from 'google-map-react';\nimport '../App.css';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFetch = () => {\n      fetch(\"http://localhost:3001/points\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => response.json()).then(response => {\n        this.props.setPoints({\n          points: response.points\n        });\n      }).catch(error => console.log('error:', error));\n    };\n\n    this.displayMarkers = () => {\n      return this.props.points.map((point, index) => {\n        return React.createElement(CustomMarker, {\n          lat: point.latitude,\n          lng: point.longitude,\n          frequency: point.frequency,\n          text: \"My Marker\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      });\n    };\n\n    this.state = [];\n    this.handleFetch();\n  }\n\n  componentDidUpdate() {\n    this.displayMarkers();\n  }\n\n  render() {\n    const mapStyle = {\n      paddingTop: '20px',\n      width: '100%',\n      height: '100vh',\n      paddingLeft: '20px',\n      paddingRight: '20px'\n    };\n    return React.createElement(\"div\", {\n      style: mapStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(GoogleMap, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyDPz11ka9meqi4YSy2gSSQEL3ZAWadNntg',\n        v: '3.32'\n      },\n      zoom: 1,\n      center: {\n        lat: 4,\n        lng: 5\n      },\n      margin: [100, 100, 100, 200],\n      passive: true,\n      yesIWantToUseGoogleMapApiInternals: true,\n      defaultOptions: {\n        disableDefaultUI: true,\n        keyboardShortcuts: false,\n        scaleControl: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.displayMarkers()));\n  }\n\n}\n\nexport default connect(state => ({\n  points: state.points\n}), dispatch => ({\n  addPoint: data => {\n    dispatch(addPoint(data));\n  },\n  setPoints: data => {\n    dispatch(setPoints(data));\n  },\n  updatePoint: data => {\n    dispatch(updatePoint(data));\n  }\n}))(MapContainer);","map":{"version":3,"sources":["/home/vanine/Desktop/maps/frontend/src/components/mapContainer.js"],"names":["React","CustomMarker","connect","addPoint","setPoints","updatePoint","GoogleMap","MapContainer","Component","constructor","props","handleFetch","fetch","method","headers","then","response","json","points","catch","error","console","log","displayMarkers","map","point","index","latitude","longitude","frequency","state","componentDidUpdate","render","mapStyle","paddingTop","width","height","paddingLeft","paddingRight","key","v","lat","lng","disableDefaultUI","keyboardShortcuts","scaleControl","dispatch","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CustomMarker from './marker';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport { updatePoint } from '../actions/updatepoint';\nimport GoogleMap from 'google-map-react';\n\nimport '../App.css';\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = [];\n    this.handleFetch();\n  }\n  \n  handleFetch = () => {\n    fetch(\"http://localhost:3001/points\",  {\n      method: 'GET',\n      headers: {\n         'Content-Type': 'application/x-www-form-urlencoded',\n      },\n  }).then(response => response.json())\n  .then(response => {\n    this.props.setPoints({points: response.points});\n  })\n  .catch(error => console.log('error:', error)); \n}\ncomponentDidUpdate() {\n  this.displayMarkers();\n}\n\ndisplayMarkers = () => {\n    return this.props.points.map((point, index) => {\n    return  <CustomMarker\n    lat={point.latitude}\n    lng={point.longitude}\n    frequency={point.frequency}\n    text=\"My Marker\"\n  />})}\n  render() {\n    const mapStyle = {\n      paddingTop: '20px',\n      width: '100%',\n      height: '100vh',\n      paddingLeft: '20px',\n      paddingRight: '20px',\n    };\n    \n    return (\n      <div style={mapStyle}>\n      <GoogleMap\n      bootstrapURLKeys={{key: 'AIzaSyDPz11ka9meqi4YSy2gSSQEL3ZAWadNntg', v: '3.32',}}\n      zoom={1}\n      center={{ lat: 4, lng: 5}}\n      margin={[100, 100, 100, 200]}\n      passive={true}\n      yesIWantToUseGoogleMapApiInternals\n      defaultOptions={{\n        disableDefaultUI: true,\n        keyboardShortcuts: false, \n        scaleControl: true, \n      }}\n      >\n      {this.displayMarkers()}\n      </GoogleMap>\n      </div>\n     \n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    points: state.points,\n    }),\n  dispatch => ({\n    addPoint: (data => {\n      dispatch(addPoint(data))\n    }),\n    setPoints: ((data) => {\n      dispatch(setPoints(data))\n    }),\n    updatePoint: ((data) => {\n      dispatch(updatePoint(data))\n    }),\n}))(MapContainer)\n"]},"metadata":{},"sourceType":"module"}