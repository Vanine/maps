{"ast":null,"code":"var _jsxFileName = \"/home/vanine/Desktop/maps/frontend/src/components/mapContainer.js\";\nimport React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport CustomMarker from './marker';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport '../App.css';\n\nconst AnyReactComponent = ({\n  text\n}) => React.createElement(\"div\", {\n  style: {\n    color: 'white',\n    background: 'grey',\n    padding: '15px 10px',\n    display: 'inline-flex',\n    textAlign: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: '100%',\n    transform: 'translate(-50%, -50%)'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, text);\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFetch = () => {\n      console.log(this.props);\n      fetch(\"http://localhost:3001/points\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => response.json()).then(response => {\n        this.props.setPoints({\n          points: response.points\n        });\n        console.log(\"this.props.points: \", this.props.points); // console.log(this.props)\n\n        console.log(response);\n      }).catch(error => console.log('error:', error));\n      console.log(this.props);\n    };\n\n    this.state = {\n      dataSource: []\n    };\n    this.handleFetch();\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100vh'\n    };\n    return React.createElement(Map, {\n      google: this.props.google,\n      zoom: 8,\n      style: mapStyles,\n      initialCenter: {\n        lat: 47.444,\n        lng: -122.176\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CustomMarker, {\n      coordinate: {\n        lat: 59.955413,\n        lng: 30.337844\n      },\n      text: 'Kreyser Avrora',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  points: state.points\n}), dispatch => ({\n  addPoint: data => {\n    dispatch(addPoint(data));\n  },\n  setPoints: data => {\n    dispatch(setPoints(data));\n  }\n}))(GoogleApiWrapper({\n  apiKey: 'AIzaSyCR1rxt8xnpURsVA3bDm8eukPy4EmW9icQ'\n})(MapContainer));","map":{"version":3,"sources":["/home/vanine/Desktop/maps/frontend/src/components/mapContainer.js"],"names":["React","Map","GoogleApiWrapper","Marker","CustomMarker","connect","addPoint","setPoints","AnyReactComponent","text","color","background","padding","display","textAlign","alignItems","justifyContent","borderRadius","transform","MapContainer","Component","constructor","props","handleFetch","console","log","fetch","method","headers","then","response","json","points","catch","error","state","dataSource","render","mapStyles","width","height","google","lat","lng","dispatch","data","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport CustomMarker from './marker';\nimport { connect } from \"react-redux\";\nimport { addPoint } from '../actions/addpoint';\nimport { setPoints } from '../actions/setpoints';\nimport '../App.css';\nconst AnyReactComponent = ({ text }) => <div style={{\n  color: 'white', \n  background: 'grey',\n  padding: '15px 10px',\n  display: 'inline-flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  borderRadius: '100%',\n  transform: 'translate(-50%, -50%)'\n}}>\n  {text}\n</div>;\n\nclass MapContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: [],\n    };\n    this.handleFetch();\n  }\n  handleFetch = () => {\n    console.log(this.props);\n    fetch(\"http://localhost:3001/points\",  {\n      method: 'GET',\n      headers: {\n         'Content-Type': 'application/x-www-form-urlencoded',\n      },\n  }).then(response => response.json())\n  .then(response => {\n    this.props.setPoints({points: response.points});\n    console.log(\"this.props.points: \", this.props.points);\n    // console.log(this.props)\n    console.log(response);\n  })\n  .catch(error => console.log('error:', error)); \n  console.log(this.props)\n}\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '100vh',\n    };\n    \n    return (\n      <Map\n      google={this.props.google}\n      zoom={8}\n      style={mapStyles}\n      initialCenter={{ lat: 47.444, lng: -122.176}}\n      >\n      <CustomMarker\n          coordinate={{lat: 59.955413, lng: 30.337844}} \n          \n          text={'Kreyser Avrora'} \n        />      \n        </Map>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    points: state.points,\n    }),\n  dispatch => ({\n    addPoint: (data => {\n      dispatch(addPoint(data))\n    }),\n    setPoints: ((data) => {\n      dispatch(setPoints(data))\n    }),\n}))(GoogleApiWrapper({\n  apiKey: 'AIzaSyCR1rxt8xnpURsVA3bDm8eukPy4EmW9icQ'\n})(MapContainer));\n"]},"metadata":{},"sourceType":"module"}